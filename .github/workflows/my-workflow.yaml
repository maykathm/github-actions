on:
  workflow_call:
    inputs:
      other-input:
        required: false
        type: string
      runs-on:
        required: true
        type: string
      boolean-var:
        required: false
        type: boolean
        default: false

jobs:
  test-things:
    name: "bob${{ inputs.boolean-var && ' with-bool-var' || '' }}
          and more ${{ inputs.other-input }}"
    runs-on: ${{ fromJSON(inputs.runs-on) }}
    steps:
    - name: Read inputs
      run: |
        echo "${{ toJSON(inputs.runs-on) }}"
        printf "%s" "${{ toJSON(inputs.runs-on) }}"

    - name: boolean-var is true
      if: "${{ inputs.boolean-var }}"
      run: |
        if [ "${{ inputs.boolean-var }}" = true ]; then
          echo "The variable evaluates as true and is ${{ fromJSON(inputs.boolean-var) }}"
        else
          echo "The variable evaluates as false and is ${{ fromJSON(inputs.boolean-var) }}"
        fi

        if [ "${{ inputs.boolean-var }}" = false ]; then
          echo "The variable evaluates as false and is ${{ fromJSON(inputs.boolean-var) }}"
        else
          echo "The variable evaluates as true and is ${{ fromJSON(inputs.boolean-var) }}"
        fi
            
    - name: boolean-var is false
      if: "${{ !inputs.boolean-var }}"
      run: |
        if [ "${{ inputs.boolean-var }}" = true ]; then
          echo "The variable evaluates as true and is ${{ fromJSON(inputs.boolean-var) }}"
        else
          echo "The variable evaluates as false and is ${{ fromJSON(inputs.boolean-var) }}"
        fi

        if [ "${{ inputs.boolean-var }}" = false ]; then
          echo "The variable evaluates as false and is ${{ fromJSON(inputs.boolean-var) }}"
        else
          echo "The variable evaluates as true and is ${{ fromJSON(inputs.boolean-var) }}"
        fi

    - name: boolean-var and runner 0
      if: "${{ !inputs.boolean-var && !endsWith(inputs.other-input, '-fips') }}"
      run: |
        echo "hello"

    - name: boolean-var and runner 1
      if: "${{ !inputs.boolean-var && !endsWith(inputs.other-input, 'ings') }}"
      run: |
        echo "hello"

    - name: boolean-var and runner 2
      if: "${{ inputs.boolean-var && !endsWith(inputs.other-input, '-fips') }}"
      run: |
        echo "hello"

    - name: boolean-var and runner 3
      if: "${{ inputs.boolean-var && !endsWith(inputs.other-input, 'ings') }}"
      run: |
        echo "hello"